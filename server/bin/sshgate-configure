#!/bin/bash
#
# Copyright (c) 2010 Linagora
# Patrick Guiran <pguiran@linagora.com>
# http://github.com/Tauop/sshGate
#
# sshGate is free software, you can redistribute it and/or modify
# it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# sshGate is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# README ---------------------------------------------------------------------
# The purpose of this script is to configure or reconfigure sshGate
# ----------------------------------------------------------------------------

# Helper function to load dependencies ---------------------------------------
load() {
  local var= value= file=

  var="$1"; file="$2"
  value=$( eval "echo \"\${${var}:-}\"" )

  [ -n "${value}" ] && return 1;
  if [ -f "${file}" ]; then
    . "${file}"
    return 0
  fi
  return 2;
}

# Load ScriptHelper libraries ------------------------------------------------
# Here is the loading order :
#  - local sub-directory -> for installation/upgrade stage
#  - system wide installation -> when ScriptHelper is installed system-wide
#  - sshGate sub-part -> when sshGate is installed with an embeeded ScriptHelper
[ -d './lib/' ] && SCRIPT_HELPER_DIRECTORY='./lib'
load SCRIPT_HELPER_DIRECTORY /etc/ScriptHelper.conf
load SCRIPT_HELPER_DIRECTORY /etc/sshgate.conf

SCRIPT_HELPER_DIRECTORY="${SCRIPT_HELPER_DIRECTORY:-}"
SCRIPT_HELPER_DIRECTORY="${SCRIPT_HELPER_DIRECTORY%%/}"

if [ ! -d "${SCRIPT_HELPER_DIRECTORY:-}" ]; then
  echo "ERROR: sshGate depends on ScriptHelper which doesn't seem to be installed"
  exit 2
fi

# Load ScriptHelper needed libraries
load __LIB_RANDOM__  "${SCRIPT_HELPER_DIRECTORY}/random.lib.sh"  || ( echo '[ERROR] Unable to load random.lib.sh';  exit $? )
load __LIB_MESSAGE__ "${SCRIPT_HELPER_DIRECTORY}/message.lib.sh" || ( echo '[ERROR] Unable to load message.lib.sh'; exit $? )
load __LIB_ASK__     "${SCRIPT_HELPER_DIRECTORY}/ask.lib.sh"     || ( echo '[ERROR] Unable to load ask.lib.sh';     exit $? )
load __LIB_CONF__    "${SCRIPT_HELPER_DIRECTORY}/conf.lib.sh"    || ( echo '[ERROR] Unable to load conf.lib.sh';    exit $? )


# Load setup.func ! ----------------------------------------------------------
# try to load local one (installation/upgrade), then installed sshGate one
load __SETUP_FUNC__ './bin/core/setup.func'
load __SETUP_FUNC__ "${SSHGATE_DIR_CORE:-}/setup.func"
load __SETUP_FUNC__ "${SSHGATE_DIRECTORY:-}/setup.func"

[ -z "${__SETUP_FUNC__:-}" ] && ( echo 'Unable to load setup.func'; exit 2; )

# Parse arguments ------------------------------------------------------------
SILENT="0"
if [ $# -ne 0 -a "$1" = "--silent" ]; then
  SILENT="1"; shift;
fi

if [ $# -ne 0 ]; then
  ACTION="$1"; shift;
fi

if [   "${ACTION}" != 'configure' \
    -a "${ACTION}" != 'display'   \
    -a -n "${ACTION}" ]; then
  echo "Usage: $0 [display|configure|configure <file>|update|update <file>]"
  exit 1
fi

# Main -----------------------------------------------------------------------
if [ "${SILENT}" != "1" ]; then
  BR
  MESSAGE "   --- sshGate server configuration ---"
  MESSAGE "             by Patrick Guiran"
  BR
fi

case "${ACTION}" in
 'configure') SETUP_CONFIGURE $@;;
 'display')   SETUP_DISPLAY_CONF $@;;
 *)           SETUP_DISPLAY_CONF $@;;
esac

exit $?
